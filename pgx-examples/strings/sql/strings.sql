-- This file is auto generated by pgx.
-- `./sql/load-order.txt` items.
                
-- `extension_sql!()` defined SQL.

-- Schemas defined by `#[pg_schema] mod { /* ... */ }` blocks (except `public` & `pg_catalog`)
CREATE SCHEMA IF NOT EXISTS strings;

-- Enums derived via `#[derive(PostgresEnum)]`

-- Shell types for types defined by `#[derive(PostgresType)]`

-- Functions defined by `#[pg_extern]`

-- src/lib.rs:36
-- strings::split_set
CREATE OR REPLACE FUNCTION strings."split_set"(
	"input" text , /* &str */
	"pattern" text  /* &str */
) RETURNS SETOF text /* str */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'split_set_wrapper';

-- src/lib.rs:31
-- strings::split
CREATE OR REPLACE FUNCTION strings."split"(
	"input" text , /* &str */
	"pattern" text  /* &str */
) RETURNS text[] /* alloc::vec::Vec<&str> */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'split_wrapper';

-- src/lib.rs:24
-- strings::append
CREATE OR REPLACE FUNCTION strings."append"(
	"input" text , /* alloc::string::String */
	"extra" text  /* &str */
) RETURNS text /* alloc::string::String */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'append_wrapper';

-- src/lib.rs:19
-- strings::substring
CREATE OR REPLACE FUNCTION strings."substring"(
	"input" text , /* &str */
	"start" integer , /* i32 */
	"end" integer  /* i32 */
) RETURNS text /* &str */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'substring_wrapper';

-- src/lib.rs:14
-- strings::to_lowercase
CREATE OR REPLACE FUNCTION strings."to_lowercase"(
	"input" text  /* &str */
) RETURNS text /* alloc::string::String */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'to_lowercase_wrapper';

-- src/lib.rs:9
-- strings::return_static
CREATE OR REPLACE FUNCTION strings."return_static"() RETURNS text /* &str */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'return_static_wrapper';

-- Types defined by `#[derive(PostgresType)]`

-- Operator classes defined by `#[derive(PostgresHash, PostgresOrd)]`

