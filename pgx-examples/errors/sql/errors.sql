-- This file is auto generated by pgx.
-- `./sql/load-order.txt` items.
                
-- `extension_sql!()` defined SQL.

-- Schemas defined by `#[pg_schema] mod { /* ... */ }` blocks (except `public` & `pg_catalog`)
CREATE SCHEMA IF NOT EXISTS errors;

-- Enums derived via `#[derive(PostgresEnum)]`

-- Shell types for types defined by `#[derive(PostgresType)]`

-- Functions defined by `#[pg_extern]`

-- src/lib.rs:58
-- errors::throw_pg_fatal
CREATE OR REPLACE FUNCTION errors."throw_pg_fatal"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'throw_pg_fatal_wrapper';

-- src/lib.rs:53
-- errors::throw_pg_panic
CREATE OR REPLACE FUNCTION errors."throw_pg_panic"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'throw_pg_panic_wrapper';

-- src/lib.rs:48
-- errors::throw_pg_error
CREATE OR REPLACE FUNCTION errors."throw_pg_error"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'throw_pg_error_wrapper';

-- src/lib.rs:43
-- errors::raise_pg_warning
CREATE OR REPLACE FUNCTION errors."raise_pg_warning"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'raise_pg_warning_wrapper';

-- src/lib.rs:38
-- errors::raise_pg_info
CREATE OR REPLACE FUNCTION errors."raise_pg_info"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'raise_pg_info_wrapper';

-- src/lib.rs:33
-- errors::throw_rust_panic
CREATE OR REPLACE FUNCTION errors."throw_rust_panic"(
	"message" text  /* &str */
) RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'throw_rust_panic_wrapper';

-- src/lib.rs:26
-- errors::cause_pg_error
CREATE OR REPLACE FUNCTION errors."cause_pg_error"() RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'cause_pg_error_wrapper';

-- src/lib.rs:20
-- errors::cause_unwrap_panic
CREATE OR REPLACE FUNCTION errors."cause_unwrap_panic"() RETURNS void
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'cause_unwrap_panic_wrapper';

-- src/lib.rs:9
-- errors::array_with_null_and_panic
CREATE OR REPLACE FUNCTION errors."array_with_null_and_panic"(
	"input" integer[]  /* alloc::vec::Vec<core::option::Option<i32>> */
) RETURNS bigint /* i64 */
STRICT
LANGUAGE c /* Rust */
AS 'MODULE_PATHNAME', 'array_with_null_and_panic_wrapper';

-- Types defined by `#[derive(PostgresType)]`

-- Operator classes defined by `#[derive(PostgresHash, PostgresOrd)]`

